#pragma once
#ifndef BIGFISHDEFS
#define BIGFISHDEFS
enum
{
	// pitch related
	PITCH_FINE,
	PITCH_COARSE,
	PITCH_CHORD,

	// osc related
	OSC_SHAPE,
	OSC_SIZE,
	OSC_SPREAD,

	// amp env related
	AMP_ATTACK,
	AMP_DECAY,
	AMP_SUSTAIN,
	AMP_RELEASE,

	// filter
	FILTER_TYPE,

	FILTER_CUTOFF,
	FILTER_RESONANCE,

	FILTER_PEAKS,
	FILTER_DRIFT,
	FILTER_KEYTRACK,
	FILTER_ENVELOPE,
	FILTER_DRIVE,


	// filter env related
	FILTER_ATTACK,
	FILTER_DECAY,
	FILTER_ACCENT,

	AMP_VELOCITY,

	__PARAMCOUNT
};

enum
{
	FILTERTYPE_LP,
	FILTERTYPE_HP,
	FILTERTYPE_VOCAL,
	FILTERTYPE_BR,
	FILTERTYPE_BP,
	__FILTERTYPE_COUNT
};

enum
{
	FILTERKEYTRACK_NEG2,
	FILTERKEYTRACK_NEG1HALF,
	FILTERKEYTRACK_NEG1,
	FILTERKEYTRACK_NEGHALF,
	FILTERKEYTRACK_OFF,
	FILTERKEYTRACK_POSHALF,
	FILTERKEYTRACK_POS1,
	FILTERKEYTRACK_POS1HALF,
	FILTERKEYTRACK_POS2,
	__FILTERKEYTRACK_COUNT
};

enum
{
	FISHGATE_GATE,
	FISHGATE_ACCENT,
	__GATECOUNT
};

enum
{
	LED_OSCMODE_1,
	LED_OSCMODE_2,
	LED_OSCMODE_3,
	LED_OSCMODE_4,
	LED_OSCMODE_5,
	LED_OSCMODE_6,
	LED_OSCMODE_7,

	LED_FILTERMODE_1,
	LED_FILTERMODE_2,
	LED_FILTERMODE_3,
	LED_FILTERMODE_4,

	__LEDCOUNT
};

enum
{
	ENV_IDLE,
	ENV_ATTACK,
	ENV_DECAY,
	ENV_SUSTAIN,
	ENV_RELEASE
};


typedef struct BigFishGlobals_t
{
	float odsr;
	float fSamplerate;
	int nSamplerate;
	float fcminuspi_sr;
	float fc2pi_sr;
} BigFishGlobals_t;

#ifdef WIN32
extern BigFishGlobals_t globals;
#else
extern const BigFishGlobals_t globals;
#endif

#define PI 3.14159265358979f


#endif